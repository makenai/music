{"version":3,"sources":["constants.js","utils/notes.js","utils/synth.js","components/PianoKey.js","utils/piano.js","components/Piano.js","components/StudyNotes.js","routes/Modes.js","routes/IntroChords.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Notes","Solfege","NoteRegex","RegExp","FlatToSharp","Modes","Ionian","split","Dorian","Phrygian","Lydian","Mixoludian","Aeolian","Locrian","BadNoteError","Error","BadNoteRangeError","noteValue","note","indexOf","Note","noteMatch","exec","this","octave","Number","noteNumber","Math","floor","solfegeName","solfege","synth","Tone","toDestination","SynthContext","React","createContext","toggleNotes","status","isArray","values","forEach","useSynth","useContext","notes","setNotes","ref","playNote","duration","delay","time","triggerAttackRelease","schedule","current","playNotes","i","PianoKey","onPlay","highlight","classNames","cx","match","isBlackKey","playing","keyProps","onMouseDown","onMouseOver","e","buttons","role","className","Piano","startNote","endNote","highlightNotes","from","to","valueOf","push","map","toString","notesBetween","StudyNotes","children","ModesRoute","useState","mode","setMode","setOctave","modeNotes","prevNoteNumber","addOctaves","onChange","target","value","Object","keys","modeName","onClick","shuffle","first","last","cMajorChords","name","IntroChords","setHighlightNotes","handleHover","chord","onMouseOut","handleChord","tabs","title","pathname","Header","location","useLocation","tab","App","Provider","exact","path","href","loading","width","height","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAoBaA,EAAQ,CACjB,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAGnDC,EAAU,CACnB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAGzDC,EAAY,IAAIC,OAAO,yBAEvBC,EAAc,CACvB,GAAM,KACN,GAAM,KACN,GAAM,KACN,GAAM,KACN,GAAM,MAGGC,EAAQ,CACjBC,OAAY,WAAWC,MAAM,IAC7BC,OAAY,WAAWD,MAAM,IAC7BE,SAAY,WAAWF,MAAM,IAC7BG,OAAY,WAAWH,MAAM,IAC7BI,WAAY,WAAWJ,MAAM,IAC7BK,QAAY,WAAWL,MAAM,IAC7BM,QAAY,WAAWN,MAAM,KAGpBO,EAAb,wIAAkCC,QACrBC,EAAb,wIAAuCD,Q,OC1CjCE,EAAY,SAAAC,GAAI,OAAIlB,EAAMmB,QAAQf,EAAYc,IAASA,IAKhDE,EAAb,WACE,WAAYF,GACV,GADiB,oBACG,kBAATA,EAAmB,CAC5B,IAAMG,EAAYnB,EAAUoB,KAAKJ,GACjC,IAAKG,EACH,MAAM,IAAIP,EAAJ,WAAqBI,EAArB,gCAGR,GADAK,KAAKL,KAAOG,EAAU,IACQ,IAA1BJ,EAAUM,KAAKL,MACjB,MAAM,IAAIJ,EAAJ,WAAqBS,KAAKL,KAA1B,0BAERK,KAAKC,OAASC,OAAOJ,EAAU,IAEjC,GAAoB,kBAATH,EAAmB,CAC5B,IAAMQ,EAAaR,EAAO,GAC1BK,KAAKL,KAAOlB,EAAM0B,GAClBH,KAAKC,OAASG,KAAKC,MAAMV,EAAO,IAAM,GAhB5C,4CAoBE,WACE,MAAM,GAAN,OAAUK,KAAKL,MAAf,OAAsBK,KAAKC,UArB/B,qBAwBE,WACE,IAAME,EAAaT,EAAUM,KAAKL,MAElC,OAAuB,IADFK,KAAKC,OAAS,GACNE,IA3BjC,qBA8BE,WACE,OAAOzB,EAAQgB,EAAUM,KAAKL,WA/BlC,KAwEaW,EAAc,SAACX,GAC1B,OAAO,IAAIE,EAAKF,GAAMY,W,gDC7ElBC,GAAQ,IAAIC,KAAiBC,gBAC7BC,EAAeC,IAAMC,cAAc,IAEnCC,EAAc,SAACnB,EAAMoB,GACzB,GAAIC,kBAAQrB,GAAO,CACjB,IAAMsB,EAAS,GAEf,OADAtB,EAAKuB,SAAQ,SAAAvB,GAAI,OAAIsB,EAAOtB,GAAQoB,KAC7BE,EAEP,OAAO,eAAGtB,EAAOoB,IAIfI,EAAW,WACf,MAAiCC,qBAAWT,GAApCU,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,IAEzB,SAASC,EAAS7B,GAA+B,IAAzB8B,EAAwB,uDAAf,IAAMC,EAAS,uDAAH,EACrCC,EAAOlB,MAAaiB,EAC1BlB,EAAMoB,qBAAqBjC,EAAM8B,EAAUE,GAC3ClB,IAAUoB,UAAS,WACjBP,EAAS,2BAAKC,EAAIO,SAAYhB,EAAYnB,GAAM,OAC/CgC,GACHlB,IAAUoB,UAAS,WACjBP,EAAS,2BAAKC,EAAIO,SAAYhB,EAAYnB,GAAM,OAC/CgC,EAAOF,GASZ,MAAO,CAAED,WAAUO,UANnB,SAAmBV,GAAoB,IAAbK,EAAY,uDAAN,IAC9BL,EAAMH,SAAQ,SAACvB,EAAKqC,GAClBR,EAAS7B,EAAM,IAAMqC,EAAIN,OAICL,U,OCtBjBY,EAdE,SAAC,GAAiC,IAA/BtC,EAA8B,EAA9BA,KAAMuC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACtBd,EAAUF,IAAVE,MACFe,EAAaC,IAAG,WCPA,SAAA1C,GACtB,OAAOA,EAAK2C,MAAM,cDMgBC,CAAW5C,GAAQ,WAAa,WAAY,CAAE6C,QAASnB,EAAM1B,IAAS,CAAEwC,cACpGM,EAAW,GAKjB,OAJIP,IACAO,EAASC,YAAcR,EACvBO,EAASE,YAAc,SAAAC,GAAC,OAAkB,IAAdA,EAAEC,SAAiBX,MAE3C,8CAAKY,KAAK,OAAOC,UAAWX,GAAgBK,GAA5C,cACJ,qBAAKM,UAAU,UAAf,SAA0BzC,EAAYX,KACtC,qBAAKoD,UAAU,WAAf,SAA2BpD,SEEpBqD,G,OAZD,SAAC,GAIR,IAAD,IAHFC,iBAGE,MAHS,KAGT,MAFFC,eAEE,MAFM,KAEN,MADFC,sBACE,MADa,GACb,EACM3B,EAAaL,IAAbK,SACFH,EJ0CkB,SAAC+B,EAAMC,GACjC,IAAMJ,EAAY,IAAIpD,EAAKuD,GACrBF,EAAU,IAAIrD,EAAKwD,GACzB,GAAIJ,EAAYC,EACd,MAAM,IAAIzD,EAAkB,0CAG9B,IADA,IAAM4B,EAAQ,CAAC4B,GACNjB,EAAIiB,EAAUK,UAAY,EAAGtB,EAAIkB,EAAQI,UAAWtB,IAC3DX,EAAMkC,KAAK,IAAI1D,EAAKmC,IAGtB,OADAX,EAAMkC,KAAKL,GACJ7B,EAAMmC,KAAI,SAAA7D,GAAI,OAAIA,EAAK8D,cIrDdC,CAAaT,EAAWC,GACtC,OAAQ,qBAAKH,UAAU,QAAf,SACH1B,EAAMmC,KAAI,SAAA7D,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,EAAiBuC,OAAQ,kBAAMV,EAAS7B,IAAOwC,UAAWgB,EAAevD,QAAQD,IAAS,GAA/EA,U,iBCFvCgE,G,OAPI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,OAAQ,sBAAKb,UAAU,cAAf,UACN,oBAAIA,UAAU,WAAd,yBACA,cAAC,IAAD,UAAgBa,SCoDLC,EAlDI,WACjB,IAAQ9B,EAAcZ,IAAdY,UACR,EAAwB+B,mBAAS,UAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,GAArC,mBAAO7D,EAAP,KAAegE,EAAf,KACMC,EN4DkB,SAAC7C,GAA4B,IACjDpB,EAASC,OADuC,uDAAN,GAE1CiE,EAAiB,KACrB,OAAO9C,EAAMmC,KAAI,SAAC7D,EAAMqC,GACtB,IAAM7B,EAAaT,EAAUC,GAG7B,OAFuB,OAAnBwE,GAA2BhE,EAAagE,IAAgBlE,GAAU,GACtEkE,EAAiBhE,EACX,GAAN,OAAUR,GAAV,OAAiBM,MMnEDmE,CAAWtF,EAAMiF,GAAO9D,GAU1C,OAAQ,gCACN,sBAAK8C,UAAU,eAAf,UACE,gCACE,uBAAOA,UAAU,QAAjB,kBACA,qBAAKA,UAAU,SAAf,SACE,wBAAQsB,SAAU,SAACzB,GAAD,OAAOoB,EAAQpB,EAAE0B,OAAOC,QAAQA,MAAOR,EAAzD,SACGS,OAAOC,KAAK3F,GAAO0E,KAAI,SAAAkB,GAAQ,OAC9B,wBAAQH,MAAOG,EAAf,SAAyCA,GAAXA,aAKtC,gCACE,uBAAO3B,UAAU,QAAjB,oBACA,qBAAKA,UAAU,SAAf,SACE,wBAAQsB,SAAU,SAACzB,GAAD,OAAOqB,EAAUrB,EAAE0B,OAAOC,QAAQA,MAAOtE,EAA3D,SACG,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIuD,KAAI,SAAAvD,GAAM,OACpC,wBAAQsE,MAAOtE,EAAf,SAAqCA,GAATA,aAKpC,wBAAQ8C,UAAU,oBAAoB4B,QA9BnB,WACrB5C,EAAUmC,IA6BR,8BACA,wBAAQnB,UAAU,oBAAoB4B,QA3BrB,WACnB5C,EAAU6C,kBAAQ,GAAD,mBAAMV,GAAN,YAAoBA,OA0BnC,4BAEF,cAAC,EAAD,CAAOjB,UAAW4B,gBAAMX,GAAYhB,QAAS4B,eAAKZ,KAClD,cAAC,EAAD,qQC3CEa,EAAe,CACnB,CAAEC,KAAM,OAAQ3D,MAAO,CAAE,KAAM,KAAM,MAAQ0B,UAAW,YACxD,CAAEiC,KAAM,OAAQ3D,MAAO,CAAE,KAAM,KAAM,MAAQ0B,UAAW,YACxD,CAAEiC,KAAM,OAAQ3D,MAAO,CAAE,KAAM,KAAM,MAAQ0B,UAAW,YACxD,CAAEiC,KAAM,OAAQ3D,MAAO,CAAE,KAAM,KAAM,MAAQ0B,UAAW,YACxD,CAAEiC,KAAM,OAAQ3D,MAAO,CAAE,KAAM,KAAM,MAAQ0B,UAAW,YACxD,CAAEiC,KAAM,OAAQ3D,MAAO,CAAE,KAAM,KAAM,MAAQ0B,UAAW,YACxD,CAAEiC,KAAM,OAAQ3D,MAAO,CAAE,KAAM,KAAM,MAAQ0B,UAAW,kBA2C3CkC,EAxCK,WAClB,MAA8CnB,mBAAS,IAAvD,mBAAQX,EAAR,KAAwB+B,EAAxB,KACQ1D,EAAaL,IAAbK,SAMF2D,EAAc,SAACC,GACnBF,EAAkBE,EAAQA,EAAM/D,MAAO,KAGzC,OAAQ,gCACN,qBAAK0B,UAAU,eAAf,SACGgC,EAAavB,KAAI,SAAA4B,GAAK,OACrB,wBACErC,UAAWV,IAAG,SAAU+C,EAAMrC,WAE9BJ,YAAa,kBAAMwC,EAAYC,IAC/BC,WAAY,kBAAMF,KAClBR,QAAS,kBAhBG,SAACS,GACnB5D,EAAS4D,EAAM/D,OAeMiE,CAAYF,IAL7B,SAKsCA,EAAMJ,MAHrCI,EAAMJ,WAMjB,cAAC,EAAD,CAAO/B,UAAU,KAAKC,QAAQ,KAAKC,eAAgBA,IACnD,cAAC,EAAD,qiB,gBCnCEoC,G,OAAO,CACX,CAAEC,MAAO,OAAQC,SAAU,KAC3B,CAAED,MAAO,QAASC,SAAU,UAC5B,CAAED,MAAO,kBAAmBC,SAAU,kBAkBzBC,EAfA,WACb,IAAMC,EAAWC,cACjB,OACA,sBAAK7C,UAAU,SAAf,UACE,oBAAIA,UAAU,QAAd,4CACA,qBAAKA,UAAU,OAAf,SACE,6BACGwC,EAAK/B,KAAI,SAACqC,EAAI7D,GAAL,OAAY,oBAAYe,UAAWV,IAAG,CAAE,YAAawD,EAAIJ,WAAaE,EAASF,WAAnE,SACpB,cAAC,IAAD,CAAMpC,GAAIwC,EAAIJ,SAAd,SAAyBI,EAAIL,SADAxD,c,OCmBxB8D,MA5Bf,WACE,MAAiChC,IAAS,IAA1C,mBAAQzC,EAAR,KAAeC,EAAf,KAAyBC,EAAzB,KACA,OACE,eAACZ,EAAaoF,SAAd,CAAuBxB,MAAO,CAAElD,QAAOC,WAAUC,OAAjD,UACE,qBAAKwB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,eAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,IAAlB,UACE,8EAAgD,mBAAGC,KAAK,wDAAR,0CAAhD,OACA,0CAEF,cAAC,IAAD,CAAOD,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,cAKR,mBAAGC,KAAK,mCAAmCnD,UAAU,UAArD,SACE,qBAAKoD,QAAQ,OAAOC,MAAM,MAAMC,OAAO,MAAMC,IAAI,gGAAgGC,IAAI,oBAAoB,mBAAiB,YCnBnLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.361c6f92.chunk.js","sourcesContent":["/*\r\n * Octave | MIDI Note Numbers\r\n * -------+------------------------------------------------\r\n *        |   C  C#   D  D#   E   F  F#   G  G#   A  A#   B\r\n * -------+------------------------------------------------\r\n * -1     |   0   1   2   3   4   5   6   7   8   9  10  11\r\n *  0     |  12  13  14  15  16  17  18  19  20  21  22  23\r\n *  1     |  24  25  26  27  28  29  30  31  32  33  34  35\r\n *  2     |  36  37  38  39  40  41  42  43  44  45  46  47\r\n *  3     |  48  49  50  51  52  53  54  55  56  57  58  59\r\n *  4     |  60  61  62  63  64  65  66  67  68  69  70  71\r\n *  5     |  72  73  74  75  76  77  78  79  80  81  82  83\r\n *  6     |  84  85  86  87  88  89  90  91  92  93  94  95\r\n *  7     |  96  97  98  99 100 101 102 103 104 105 106 107\r\n *  8     | 108 109 110 111 112 113 114 115 116 117 118 119\r\n *  9     | 120 121 122 123 124 125 126 127\r\n * \r\n *  from http://www.music.mcgill.ca/~ich/classes/mumt306/StandardMIDIfileformat.html\r\n */\r\n\r\nexport const Notes = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const Solfege = [\r\n    'Do', 'Di', 'Re', 'Ri', 'Mi', 'Fa', 'Fi', 'So', 'Si', 'La', 'Li', 'Ti'\r\n];\r\n\r\nexport const NoteRegex = new RegExp(/^([A-G][b#]?)(-?\\d+)$/);\r\n\r\nexport const FlatToSharp = {\r\n    'Db': 'C#',\r\n    'Eb': 'D#',\r\n    'Gb': 'F#',\r\n    'Ab': 'G#',\r\n    'Bb': 'A#'\r\n};\r\n\r\nexport const Modes = {\r\n    Ionian:     'CDEFGABC'.split(''),\r\n    Dorian:     'DEFGABCD'.split(''),\r\n    Phrygian:   'EFGABCDE'.split(''),\r\n    Lydian:     'FGABCDEF'.split(''),\r\n    Mixoludian: 'GABCDEFG'.split(''),\r\n    Aeolian:    'ABCDEFGA'.split(''),\r\n    Locrian:    'BCDEFGAB'.split('')\r\n};\r\n\r\nexport class BadNoteError extends Error {}\r\nexport class BadNoteRangeError extends Error {}\r\n","import { Notes, Solfege, FlatToSharp, NoteRegex, BadNoteError, BadNoteRangeError } from '../constants';\r\n\r\n/**\r\n * Get the numeric value of a single note like 'A' or 'Cb' for sorting\r\n * @param {string} note \r\n * @returns {number} noteNumber\r\n */\r\nconst noteValue = note => Notes.indexOf(FlatToSharp[note] || note);\r\n\r\n/**\r\n * Note class for sorting, comparison etc.\r\n */\r\nexport class Note {\r\n  constructor(note) {\r\n    if (typeof note === 'string') {\r\n      const noteMatch = NoteRegex.exec(note);\r\n      if (!noteMatch) {\r\n        throw new BadNoteError(`\"${note}\" was not in a valid format`);\r\n      }\r\n      this.note = noteMatch[1];\r\n      if (noteValue(this.note) === -1) {\r\n        throw new BadNoteError(`\"${this.note}\" is not a valid note`)\r\n      }\r\n      this.octave = Number(noteMatch[2]);\r\n    }\r\n    if (typeof note === 'number') {\r\n      const noteNumber = note % 12;\r\n      this.note = Notes[noteNumber];\r\n      this.octave = Math.floor(note / 12) - 1;\r\n    }\r\n  }\r\n\r\n  toString() {\r\n    return `${this.note}${this.octave}`;\r\n  }\r\n\r\n  valueOf() {\r\n    const noteNumber = noteValue(this.note);\r\n    const octaveNumber = this.octave + 1;\r\n    return (octaveNumber * 12) + noteNumber;\r\n  }\r\n\r\n  solfege() {\r\n    return Solfege[noteValue(this.note)];\r\n  }\r\n}\r\n\r\n/**\r\n * Given two notes with octaves, return an array of all of the notes between them, inclusively\r\n * @param {string} from \r\n * @param {string} to \r\n * @returns {array}\r\n */\r\nexport const notesBetween = (from, to) => {\r\n  const startNote = new Note(from);\r\n  const endNote = new Note(to);\r\n  if (startNote > endNote) {\r\n    throw new BadNoteRangeError('Start note must be lower than end note');\r\n  }\r\n  const notes = [startNote];\r\n  for (let i = startNote.valueOf() + 1; i < endNote.valueOf(); i++) {\r\n    notes.push(new Note(i));\r\n  }\r\n  notes.push(endNote);\r\n  return notes.map(note => note.toString());\r\n}\r\n\r\n/**\r\n * Given a collection of sorted notes without octaves, add the given octave\r\n * @param {array} notes \r\n * @param {number} startOctave \r\n * @returns {array}\r\n */\r\nexport const addOctaves = (notes, startOctave = 4) => {\r\n  let octave = Number(startOctave);\r\n  let prevNoteNumber = null;\r\n  return notes.map((note, i) => {\r\n    const noteNumber = noteValue(note);\r\n    if (prevNoteNumber !== null && noteNumber < prevNoteNumber) octave += 1;\r\n    prevNoteNumber = noteNumber;\r\n    return `${note}${octave}`;\r\n  });\r\n};\r\n\r\nexport const solfegeName = (note) => {\r\n  return new Note(note).solfege();\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { isArray } from 'lodash';\r\nimport * as Tone from \"tone\";\r\n\r\n// https://react.christmas/2020/15\r\n// https://www.guitarland.com/MusicTheoryWithToneJS/PlayMajorScale.html\r\n// https://www.devbridge.com/articles/tonejs-coding-music-production-guide/\r\n\r\nconst synth = new Tone.PolySynth().toDestination();\r\nconst SynthContext = React.createContext({});\r\n\r\nconst toggleNotes = (note, status) => {\r\n  if (isArray(note)) {\r\n    const values = {};\r\n    note.forEach(note => values[note] = status);\r\n    return values;\r\n  } else {\r\n    return { [note]: status };\r\n  }\r\n};\r\n\r\nconst useSynth = () => {\r\n  const { notes, setNotes, ref } = useContext(SynthContext);\r\n\r\n  function playNote(note, duration=0.25, delay=0) {\r\n    const time = Tone.now() + delay;\r\n    synth.triggerAttackRelease(note, duration, time);\r\n    Tone.Draw.schedule(function(){\r\n      setNotes({ ...ref.current, ...toggleNotes(note, true) });\r\n    }, time);\r\n    Tone.Draw.schedule(function(){\r\n      setNotes({ ...ref.current, ...toggleNotes(note, false) });\r\n    }, time + duration);\r\n  }\r\n  \r\n  function playNotes(notes, delay=0.35) {\r\n    notes.forEach((note,i) => {\r\n      playNote(note, 0.25, i * delay);\r\n    })\r\n  }\r\n\r\n  return { playNote, playNotes, notes };\r\n};\r\n\r\n\r\n\r\nexport {\r\n  useSynth,\r\n  SynthContext\r\n};\r\n","import cx from 'classnames';\r\nimport { isBlackKey } from '../utils/piano';\r\nimport { solfegeName } from '../utils/notes';\r\nimport { useSynth } from '../utils/synth';\r\n\r\nconst PianoKey = ({ note, onPlay, highlight }) => {\r\n    const { notes } = useSynth(); \r\n    const classNames = cx('pianoKey', isBlackKey(note) ? 'blackKey' : 'whiteKey', { playing: notes[note] }, { highlight } );\r\n    const keyProps = {};\r\n    if (onPlay) {\r\n        keyProps.onMouseDown = onPlay;\r\n        keyProps.onMouseOver = e => e.buttons === 1 && onPlay();\r\n    }\r\n    return (<div role=\"link\" className={classNames} {...keyProps}>\r\n        <div className=\"solfege\">{solfegeName(note)}</div>\r\n        <div className=\"noteName\">{note}</div>\r\n    </div>);\r\n};\r\n\r\nexport default PianoKey;","export const isBlackKey = note => {\r\n    return note.match(/^[A-G][b#]/);\r\n};","import { notesBetween } from '../utils/notes';\r\nimport PianoKey from './PianoKey';\r\nimport { useSynth } from '../utils/synth';\r\nimport './Piano.scss';\r\n\r\nconst Piano = ({\r\n    startNote= 'C4',\r\n    endNote='C5',\r\n    highlightNotes=[]\r\n}) => {\r\n    const { playNote } = useSynth();\r\n    const notes = notesBetween(startNote, endNote);\r\n    return (<div className=\"piano\">\r\n        {notes.map(note => <PianoKey note={note} key={note} onPlay={() => playNote(note)} highlight={highlightNotes.indexOf(note) > -1}/>)}\r\n    </div>);\r\n};\r\n\r\nexport default Piano;","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown'\r\nimport './StudyNotes.scss';\r\n\r\nconst StudyNotes = ({ children }) => {\r\n  return (<div className=\"study-notes\">\r\n    <h2 className=\"subtitle\">Study Notes</h2>\r\n    <ReactMarkdown>{children}</ReactMarkdown>\r\n  </div>);\r\n};\r\n\r\nexport default StudyNotes;","import { useState } from 'react';\r\nimport { Modes } from '../constants';\r\nimport Piano from '../components/Piano';\r\nimport StudyNotes from '../components/StudyNotes';\r\nimport { addOctaves } from '../utils/notes';\r\nimport { useSynth } from '../utils/synth';\r\nimport { first, last, shuffle } from 'lodash';\r\n\r\n\r\nconst ModesRoute = () => {\r\n  const { playNotes } = useSynth(); \r\n  const [mode, setMode] = useState('Ionian');\r\n  const [octave, setOctave] = useState(4);\r\n  const modeNotes = addOctaves(Modes[mode], octave);\r\n\r\n  const handleSequence = () => {\r\n    playNotes(modeNotes);\r\n  }\r\n\r\n  const handleRandom = () => {\r\n    playNotes(shuffle([ ...modeNotes, ...modeNotes ]));\r\n  }\r\n\r\n  return (<div>\r\n    <div className=\"box controls\">\r\n      <div>\r\n        <label className=\"label\">Mode</label>\r\n        <div className=\"select\">\r\n          <select onChange={(e) => setMode(e.target.value)} value={mode}>\r\n            {Object.keys(Modes).map(modeName => (\r\n              <option value={modeName} key={modeName}>{modeName}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"label\">Octave</label>\r\n        <div className=\"select\">\r\n          <select onChange={(e) => setOctave(e.target.value)} value={octave}>\r\n            {[ 0, 1, 2, 3, 4, 6, 7, 8 ].map(octave => (\r\n              <option value={octave} key={octave}>{octave}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <button className=\"button is-primary\" onClick={handleSequence}>Play In Sequence</button>\r\n      <button className=\"button is-primary\" onClick={handleRandom}>Play Random</button>\r\n    </div>\r\n    <Piano startNote={first(modeNotes)} endNote={last(modeNotes)} />\r\n    <StudyNotes>{`\r\n- Modes are diatonic scales, meaning they are made of fives tones and two semitones.\r\n- **I** **D**on't **P**unch **L**ike **M**uhammed **A**li\r\n- Assignment was to listen to the various modes and get used to their sounds and qualities.\r\n  `}</StudyNotes>\r\n  </div>);\r\n\r\n};\r\n\r\n\r\nexport default ModesRoute;","import { useState } from 'react'; \r\nimport Piano from '../components/Piano';\r\nimport StudyNotes from '../components/StudyNotes';\r\nimport { useSynth } from '../utils/synth';\r\nimport cx from 'classnames';\r\n\r\nconst cMajorChords = [\r\n  { name: 'Cmaj', notes: [ 'C4', 'E4', 'G4' ], className: 'is-major' },\r\n  { name: 'Dmin', notes: [ 'D4', 'F4', 'A4' ], className: 'is-minor' },\r\n  { name: 'Emin', notes: [ 'E4', 'G4', 'B4' ], className: 'is-minor' },\r\n  { name: 'Fmaj', notes: [ 'F4', 'A4', 'C5' ], className: 'is-major' },\r\n  { name: 'Gmaj', notes: [ 'G4', 'B4', 'D5' ], className: 'is-major' },\r\n  { name: 'Amin', notes: [ 'A4', 'C5', 'E5' ], className: 'is-minor' },\r\n  { name: 'Bdim', notes: [ 'B4', 'D5', 'F5' ], className: 'is-diminished' }\r\n];\r\n\r\nconst IntroChords = () => {\r\n  const [ highlightNotes, setHighlightNotes ] = useState([]);\r\n  const { playNote } = useSynth(); \r\n\r\n  const handleChord = (chord) => {\r\n    playNote(chord.notes);\r\n  }\r\n\r\n  const handleHover = (chord) => {\r\n    setHighlightNotes(chord ? chord.notes: []);\r\n  }\r\n\r\n  return (<div>\r\n    <div className=\"box controls\">\r\n      {cMajorChords.map(chord => (\r\n        <button \r\n          className={cx('button', chord.className)} \r\n          key={chord.name} \r\n          onMouseOver={() => handleHover(chord)}\r\n          onMouseOut={() => handleHover()}\r\n          onClick={() => handleChord(chord)}>{chord.name}</button>\r\n      ))}\r\n    </div>\r\n    <Piano startNote=\"C4\" endNote=\"F5\" highlightNotes={highlightNotes} />\r\n    <StudyNotes>{`\r\n- Triads are the simples types of chords\r\n- These are all the triads that can be derived from C-major scale\r\n- **Major triads** have a perfect fifth and a major third\r\n- **Minor triads** have a perfecct fifth and a minor third\r\n- **Diminished triads** have a diminished fifth and a minor third\r\n- **Perfect Fifth**: 7 semitones between notes (C and G)\r\n- **Diminished Fifth**: 6 semitones between notes (B and F)\r\n- **Major Third**: 4 semitones between notes (C and E)\r\n- **Minor Third**: 3 semitones between notes (D and F)\r\n  `}</StudyNotes>\r\n  </div>);\r\n\r\n};\r\n\r\n\r\nexport default IntroChords;","import React from 'react';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport cx from 'classnames';\r\nimport './Header.scss';\r\n\r\nconst tabs = [\r\n  { title: 'Home', pathname: '/' },\r\n  { title: 'Modes', pathname: '/modes' },\r\n  { title: 'Intro to Chords', pathname: '/introChords' }\r\n];\r\n\r\nconst Header = () => {\r\n  const location = useLocation();\r\n  return (\r\n  <div className=\"header\">\r\n    <h1 className=\"title\">Music Theory Class Experiments</h1>\r\n    <div className=\"tabs\">\r\n      <ul>\r\n        {tabs.map((tab,i) => (<li key={i} className={cx({ 'is-active': tab.pathname === location.pathname })}>\r\n          <Link to={tab.pathname}>{tab.title}</Link>\r\n        </li>))}\r\n      </ul>\r\n    </div>\r\n  </div>);\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport useState from 'react-usestateref'\r\nimport ModesRoute from './routes/Modes';\r\nimport IntroChordsRoute from './routes/IntroChords';\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from './components/Header';\r\nimport { SynthContext } from './utils/synth';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  const [ notes, setNotes, ref ] = useState({});\r\n  return (\r\n    <SynthContext.Provider value={{ notes, setNotes, ref }}>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <p>Hello, doing some stuff to follow along with <a href=\"https://www.coursera.org/learn/edinburgh-music-theory\">Fundamentals of Music Theory</a>.</p>\r\n              <p>-Pawel</p>\r\n            </Route>\r\n            <Route path=\"/modes\">\r\n              <ModesRoute />\r\n            </Route>\r\n            <Route path=\"/introChords\">\r\n              <IntroChordsRoute />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n      <a href=\"https://github.com/makenai/music\" className=\"fork-me\">\r\n        <img loading=\"lazy\" width=\"149\" height=\"149\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_green_007200.png?resize=149%2C149\" alt=\"Fork me on GitHub\" data-recalc-dims=\"1\" />\r\n      </a>\r\n    </SynthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}