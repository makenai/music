{"version":3,"sources":["components/Header.js","utils/synth.js","constants.js","utils/notes.js","components/PianoKey.js","components/Piano.js","components/StudyNotes.js","routes/Intervals.js","routes/Modes.js","routes/IntroChords.js","App.js","reportWebVitals.js","index.js"],"names":["tabs","title","pathname","Header","location","useLocation","className","map","tab","i","cx","to","synth","Tone","toDestination","SynthContext","React","createContext","toggleNotes","note","status","isArray","reduce","notes","useSynth","useContext","setNotes","ref","playNote","duration","delay","time","triggerAttackRelease","schedule","current","playNotes","forEach","Notes","Solfege","NoteRegex","RegExp","NaturalNoteRegex","FlatToSharp","Modes","Ionian","split","Dorian","Phrygian","Lydian","Mixoludian","Aeolian","Locrian","Intervals","BadNoteError","Error","BadNoteRangeError","noteValue","indexOf","Note","noteMatch","exec","this","octave","Number","noteNumber","Math","floor","notesBetween","from","startNote","endNote","valueOf","push","toString","solfegeName","solfege","PianoKey","onPlay","highlight","renderAdditionalKeyLabel","noDrag","classNames","test","isNaturalNote","playing","keyProps","onMouseDown","e","stopPropagation","onMouseOver","buttons","role","Piano","highlightNotes","noop","handlePlay","StudyNotes","children","IntervalDisplay","styled","div","IntervalsRoute","useState","note1","setNote1","note2","setNote2","interval","setInterval","useEffect","semitones","length","name","getInterval","a","b","noteA","noteB","noteCmp","ModesRoute","mode","setMode","setOctave","modeNotes","prevNoteNumber","addOctaves","onChange","target","value","Object","keys","modeName","onClick","shuffle","first","last","cMajorChords","IntroChords","setHighlightNotes","handleHover","chord","onMouseOut","handleChord","App","Provider","exact","path","href","loading","width","height","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecd33c45.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport cx from 'classnames';\r\nimport './Header.scss';\r\n\r\nconst tabs = [\r\n  { title: 'Home', pathname: '/' },\r\n  { title: 'Intervals', pathname: '/intervals' },\r\n  { title: 'Modes', pathname: '/modes' },\r\n  { title: 'Intro to Chords', pathname: '/introChords' }\r\n];\r\n\r\nconst Header = () => {\r\n  const location = useLocation();\r\n  return (\r\n  <div className=\"header\">\r\n    <h1 className=\"title\">Music Theory Class Experiments</h1>\r\n    <div className=\"tabs\">\r\n      <ul>\r\n        {tabs.map((tab,i) => (<li key={i} className={cx({ 'is-active': tab.pathname === location.pathname })}>\r\n          <Link to={tab.pathname}>{tab.title}</Link>\r\n        </li>))}\r\n      </ul>\r\n    </div>\r\n  </div>);\r\n};\r\n\r\nexport default Header;","import React, { useContext } from 'react';\r\nimport { isArray } from 'lodash';\r\nimport * as Tone from \"tone\";\r\n\r\n// https://react.christmas/2020/15\r\n// https://www.guitarland.com/MusicTheoryWithToneJS/PlayMajorScale.html\r\n// https://www.devbridge.com/articles/tonejs-coding-music-production-guide/\r\n\r\nconst synth = new Tone.PolySynth().toDestination();\r\nconst SynthContext = React.createContext({});\r\n\r\n/**\r\n * Given a single note or array of notes, return an object with boolean value of status\r\n * @param {string|string[]} note \r\n * @param {boolean} status \r\n * @example \r\n * // returns { \"A4\": true, \"E5\" true }\r\n * toggleNote(['A4', 'E5'], true)\r\n * @returns {Object}\r\n */\r\nconst toggleNotes = (note, status) => isArray(note)\r\n    ? note.reduce((notes, note) => ({ ...notes, [note]: status }), {})\r\n    : { [note]: status };\r\n\r\nconst useSynth = () => {\r\n  const { notes, setNotes, ref } = useContext(SynthContext);\r\n\r\n  function playNote(note, duration=0.3, delay=0) {\r\n    const time = Tone.now() + delay;\r\n    synth.triggerAttackRelease(note, duration, time);\r\n    Tone.Draw.schedule(function(){\r\n      setNotes({ ...ref.current, ...toggleNotes(note, true) });\r\n    }, time);\r\n    Tone.Draw.schedule(function(){\r\n      setNotes({ ...ref.current, ...toggleNotes(note, false) });\r\n    }, time + duration - 0.05);\r\n  }\r\n  \r\n  function playNotes(notes, delay=0.35) {\r\n    notes.forEach((note,i) => {\r\n      playNote(note, 0.25, i * delay);\r\n    })\r\n  }\r\n\r\n  return { playNote, playNotes, notes };\r\n};\r\n\r\n\r\n\r\nexport {\r\n  useSynth,\r\n  SynthContext\r\n};\r\n","/*\r\n * Octave | MIDI Note Numbers\r\n * -------+------------------------------------------------\r\n *        |   C  C#   D  D#   E   F  F#   G  G#   A  A#   B\r\n * -------+------------------------------------------------\r\n * -1     |   0   1   2   3   4   5   6   7   8   9  10  11\r\n *  0     |  12  13  14  15  16  17  18  19  20  21  22  23\r\n *  1     |  24  25  26  27  28  29  30  31  32  33  34  35\r\n *  2     |  36  37  38  39  40  41  42  43  44  45  46  47\r\n *  3     |  48  49  50  51  52  53  54  55  56  57  58  59\r\n *  4     |  60  61  62  63  64  65  66  67  68  69  70  71\r\n *  5     |  72  73  74  75  76  77  78  79  80  81  82  83\r\n *  6     |  84  85  86  87  88  89  90  91  92  93  94  95\r\n *  7     |  96  97  98  99 100 101 102 103 104 105 106 107\r\n *  8     | 108 109 110 111 112 113 114 115 116 117 118 119\r\n *  9     | 120 121 122 123 124 125 126 127\r\n * \r\n *  from http://www.music.mcgill.ca/~ich/classes/mumt306/StandardMIDIfileformat.html\r\n */\r\n\r\nexport const Notes = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const Solfege = [\r\n    'Do', 'Di', 'Re', 'Ri', 'Mi', 'Fa', 'Fi', 'So', 'Si', 'La', 'Li', 'Ti'\r\n];\r\n\r\nexport const NoteRegex = new RegExp(/^([A-G][b#]?)(-?\\d+)$/);\r\nexport const NaturalNoteRegex = new RegExp(/^([A-G])(-?\\d+)$/);\r\n\r\nexport const FlatToSharp = {\r\n    'Db': 'C#',\r\n    'Eb': 'D#',\r\n    'Gb': 'F#',\r\n    'Ab': 'G#',\r\n    'Bb': 'A#'\r\n};\r\n\r\nexport const Modes = {\r\n    Ionian:     'CDEFGABC'.split(''),\r\n    Dorian:     'DEFGABCD'.split(''),\r\n    Phrygian:   'EFGABCDE'.split(''),\r\n    Lydian:     'FGABCDEF'.split(''),\r\n    Mixoludian: 'GABCDEFG'.split(''),\r\n    Aeolian:    'ABCDEFGA'.split(''),\r\n    Locrian:    'BCDEFGAB'.split('')\r\n};\r\n\r\nexport const Intervals = {\r\n    0: 'Perfect unison',\r\n    1: 'Minor second',\r\n    2: 'Major second',\r\n    3: 'Minor third',\r\n    4: 'Major third',\r\n    5: 'Perfect fourth',\r\n    6: 'Tritone',\r\n    7: 'Perfect fifth',\r\n    8: 'Minor sixth',\r\n    9: 'Major sixth',\r\n    10: 'Minor seventh',\r\n    11: 'Major seventh',\r\n    12: 'Perfect octave'\r\n};\r\n\r\nexport class BadNoteError extends Error {}\r\nexport class BadNoteRangeError extends Error {}\r\n","import { \r\n  Notes, \r\n  Solfege, \r\n  FlatToSharp, \r\n  NoteRegex, \r\n  NaturalNoteRegex,\r\n  Intervals,\r\n  BadNoteError, \r\n  BadNoteRangeError\r\n} from '../constants';\r\n\r\n/**\r\n * Get the numeric value of a single note like 'A' or 'Cb' for sorting\r\n * @param {string} note \r\n * @returns {number} noteNumber\r\n */\r\nconst noteValue = note => Notes.indexOf(FlatToSharp[note] || note);\r\n\r\n/**\r\n * Note class for sorting, comparison etc.\r\n */\r\nexport class Note {\r\n  constructor(note) {\r\n    if (typeof note === 'string') {\r\n      const noteMatch = NoteRegex.exec(note);\r\n      if (!noteMatch) {\r\n        throw new BadNoteError(`\"${note}\" was not in a valid format`);\r\n      }\r\n      this.note = noteMatch[1];\r\n      if (noteValue(this.note) === -1) {\r\n        throw new BadNoteError(`\"${this.note}\" is not a valid note`)\r\n      }\r\n      this.octave = Number(noteMatch[2]);\r\n    }\r\n    if (typeof note === 'number') {\r\n      const noteNumber = note % 12;\r\n      this.note = Notes[noteNumber];\r\n      this.octave = Math.floor(note / 12) - 1;\r\n    }\r\n  }\r\n\r\n  toString() {\r\n    return `${this.note}${this.octave}`;\r\n  }\r\n\r\n  valueOf() {\r\n    const noteNumber = noteValue(this.note);\r\n    const octaveNumber = this.octave + 1;\r\n    return (octaveNumber * 12) + noteNumber;\r\n  }\r\n\r\n  solfege() {\r\n    return Solfege[noteValue(this.note)];\r\n  }\r\n}\r\n\r\n/**\r\n * Given two notes with octaves, return an array of all of the notes between them, inclusively\r\n * @param {string} from \r\n * @param {string} to \r\n * @returns {array}\r\n */\r\nexport const notesBetween = (from, to) => {\r\n  const startNote = new Note(from);\r\n  const endNote = new Note(to);\r\n  if (startNote > endNote) {\r\n    throw new BadNoteRangeError('Start note must be lower than end note');\r\n  }\r\n  const notes = [startNote];\r\n  for (let i = startNote.valueOf() + 1; i < endNote.valueOf(); i++) {\r\n    notes.push(new Note(i));\r\n  }\r\n  notes.push(endNote);\r\n  return notes.map(note => note.toString());\r\n}\r\n\r\n/**\r\n * Given a collection of sorted notes without octaves, add the given octave\r\n * @param {array} notes \r\n * @param {number} startOctave \r\n * @returns {array}\r\n */\r\nexport const addOctaves = (notes, startOctave = 4) => {\r\n  let octave = Number(startOctave);\r\n  let prevNoteNumber = null;\r\n  return notes.map((note, i) => {\r\n    const noteNumber = noteValue(note);\r\n    if (prevNoteNumber !== null && noteNumber < prevNoteNumber) octave += 1;\r\n    prevNoteNumber = noteNumber;\r\n    return `${note}${octave}`;\r\n  });\r\n};\r\n\r\n/**\r\n * Return the solfege name for a note\r\n * @param {*} note \r\n * @returns \r\n */\r\nexport const solfegeName = (note) => {\r\n  return new Note(note).solfege();\r\n};\r\n\r\n/**\r\n * Returns true of note is note a sharp or flat\r\n */\r\nexport const isNaturalNote = note => NaturalNoteRegex.test(note);\r\n\r\n/**\r\n * C-style comparison function for two note strings\r\n * @param {string} a \r\n * @param {string} b \r\n * @returns {number} -1, 0, or 1\r\n */\r\nexport const noteCmp = (a, b) => {\r\n  const noteA = new Note(a);\r\n  const noteB = new Note(b);\r\n  if (noteA.valueOf() === noteB.valueOf()) {\r\n    return 0;\r\n  }\r\n  return noteA > noteB ? -1 : 1;\r\n}\r\n\r\nexport const getInterval = (from, to) => {\r\n  const notes = notesBetween(from, to);\r\n  const semitones = notes.length - 1;\r\n  return {\r\n    semitones,\r\n    ...(Intervals[semitones] ? { name: Intervals[semitones] } : {})\r\n  };\r\n};\r\n","import cx from 'classnames';\r\nimport { solfegeName, isNaturalNote } from '../utils/notes';\r\nimport { useSynth } from '../utils/synth';\r\n\r\nconst PianoKey = ({ note, onPlay, highlight, renderAdditionalKeyLabel, noDrag }) => {\r\n  const { notes } = useSynth();\r\n  const classNames = cx('pianoKey', isNaturalNote(note) ? 'whiteKey' : 'blackKey', { playing: notes[note] }, { highlight });\r\n  const keyProps = {};\r\n  if (onPlay) {\r\n    keyProps.onMouseDown = e => { e.stopPropagation(); onPlay(); }\r\n    if (!noDrag) {\r\n      keyProps.onMouseOver = e => { e.stopPropagation(); e.buttons === 1 && onPlay(); }\r\n    }\r\n  }\r\n  return (<div role=\"link\" className={classNames} {...keyProps}>\r\n    {renderAdditionalKeyLabel(note)}\r\n    <div className=\"solfege\">{solfegeName(note)}</div>\r\n    <div className=\"noteName\">{note}</div>\r\n  </div>);\r\n};\r\n\r\nexport default PianoKey;","import { notesBetween } from '../utils/notes';\r\nimport PianoKey from './PianoKey';\r\nimport { useSynth } from '../utils/synth';\r\nimport { noop } from 'lodash-es';\r\nimport './Piano.scss';\r\n\r\nconst Piano = ({\r\n    startNote= 'C4',\r\n    endNote='C5',\r\n    highlightNotes=[],\r\n    onPlay=noop,\r\n    renderAdditionalKeyLabel=noop,\r\n    noDrag\r\n}) => {\r\n    const { playNote } = useSynth();\r\n    const notes = notesBetween(startNote, endNote);\r\n    const handlePlay = (note) => playNote(note);\r\n    return (<div className=\"piano\">\r\n        {notes.map(note => <PianoKey \r\n            note={note} \r\n            key={note} \r\n            onPlay={(e) => (onPlay || handlePlay)(note)} \r\n            highlight={highlightNotes.indexOf(note) > -1}\r\n            renderAdditionalKeyLabel={renderAdditionalKeyLabel}\r\n            noDrag={noDrag}\r\n        />)}\r\n    </div>);\r\n};\r\n\r\nexport default Piano;","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown'\r\nimport './StudyNotes.scss';\r\n\r\nconst StudyNotes = ({ children }) => {\r\n  return (<div className=\"study-notes\">\r\n    <h2 className=\"subtitle\">Study Notes</h2>\r\n    <ReactMarkdown>{children}</ReactMarkdown>\r\n  </div>);\r\n};\r\n\r\nexport default StudyNotes;","import { useState, useEffect } from 'react';\r\nimport { useSynth } from '../utils/synth';\r\nimport { getInterval, noteCmp } from '../utils/notes';\r\nimport Piano from '../components/Piano';\r\nimport StudyNotes from '../components/StudyNotes';\r\nimport styled from 'styled-components';\r\n\r\nconst IntervalDisplay = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  .firstNote, .secondNote {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  >div {\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst IntervalsRoute = () => {\r\n  const { playNote } = useSynth();\r\n  const [ note1, setNote1 ] = useState();\r\n  const [ note2, setNote2 ] = useState();\r\n  const [ interval, setInterval ] = useState();\r\n\r\n  const handlePlay = (note) => {\r\n    if (note2 || !note1) {\r\n      setNote1(note);\r\n      setNote2(null);\r\n    } else {\r\n      switch(noteCmp(note1, note)) {\r\n        case 0: // Same note, cancel\r\n          setNote1(null);\r\n          break;\r\n        case 1: // Right side is higher, proceed\r\n          setNote2(note);\r\n          break;\r\n        case -1: // Left side is higher, swap notes\r\n          setNote1(note);\r\n          setNote2(note1);\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n    playNote(note);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval((note1 && note2) ? getInterval(note1, note2) : null);\r\n  }, [ note1, note2 ]);\r\n\r\n  const renderInsideKey = (note) => {\r\n    if (note === note1) {\r\n      return (<div className=\"firstNote\">1</div>);\r\n    }\r\n    if (note === note2) {\r\n      return (<div className=\"secondNote\">2</div>);\r\n    }\r\n  };\r\n\r\n  return (<>\r\n    <div className=\"box controls\">\r\n      <IntervalDisplay>\r\n        {note1 && <div className=\"firstNote\">\r\n            {note1}\r\n        </div>}\r\n        {(note1 && note2) && <div>to</div>}\r\n        {note2 && <div className=\"secondNote\">\r\n            {note2}\r\n        </div>}\r\n        {interval && <>\r\n          <div>=</div>\r\n          <div>\r\n            {interval.semitones} semitones{interval.name && `, ${interval.name}`}\r\n          </div></>}\r\n      </IntervalDisplay>\r\n    </div>\r\n    <Piano startNote=\"C4\" endNote=\"C6\" onPlay={handlePlay} renderAdditionalKeyLabel={renderInsideKey} noDrag />\r\n    <StudyNotes>{`\r\n- **Perfect Fifth**: 7 semitones between notes (C and G)\r\n- **Diminished Fifth**: 6 semitones between notes (B and F)\r\n- **Perfect Fourth**: 5 semitones beween notes (C and F)\r\n- **Major Third**: 4 semitones between notes (C and E)\r\n- **Minor Third**: 3 semitones between notes (D and F)\r\n- **Major Second**: 2 semitones between notes (C and D)\r\n- **Minor Second**: 1 semitone between notes (C and C#)\r\n  `}</StudyNotes>\r\n  </>);\r\n\r\n};\r\n\r\n\r\nexport default IntervalsRoute;","import { useState } from 'react';\r\nimport { Modes } from '../constants';\r\nimport Piano from '../components/Piano';\r\nimport StudyNotes from '../components/StudyNotes';\r\nimport { addOctaves } from '../utils/notes';\r\nimport { useSynth } from '../utils/synth';\r\nimport { first, last, shuffle } from 'lodash';\r\n\r\n\r\nconst ModesRoute = () => {\r\n  const { playNotes } = useSynth(); \r\n  const [mode, setMode] = useState('Ionian');\r\n  const [octave, setOctave] = useState(4);\r\n  const modeNotes = addOctaves(Modes[mode], octave);\r\n\r\n  const handleSequence = () => {\r\n    playNotes(modeNotes);\r\n  }\r\n\r\n  const handleRandom = () => {\r\n    playNotes(shuffle([ ...modeNotes, ...modeNotes ]));\r\n  }\r\n\r\n  return (<div>\r\n    <div className=\"box controls\">\r\n      <div>\r\n        <label className=\"label\">Mode</label>\r\n        <div className=\"select\">\r\n          <select onChange={(e) => setMode(e.target.value)} value={mode}>\r\n            {Object.keys(Modes).map(modeName => (\r\n              <option value={modeName} key={modeName}>{modeName}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"label\">Octave</label>\r\n        <div className=\"select\">\r\n          <select onChange={(e) => setOctave(e.target.value)} value={octave}>\r\n            {[ 0, 1, 2, 3, 4, 6, 7, 8 ].map(octave => (\r\n              <option value={octave} key={octave}>{octave}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <button className=\"button is-primary\" onClick={handleSequence}>Play In Sequence</button>\r\n      <button className=\"button is-primary\" onClick={handleRandom}>Play Random</button>\r\n    </div>\r\n    <Piano startNote={first(modeNotes)} endNote={last(modeNotes)} />\r\n    <StudyNotes>{`\r\n- Modes are diatonic scales, meaning they are made of fives tones and two semitones.\r\n- **I** **D**on't **P**unch **L**ike **M**uhammed **A**li\r\n- Assignment was to listen to the various modes and get used to their sounds and qualities.\r\n  `}</StudyNotes>\r\n  </div>);\r\n\r\n};\r\n\r\n\r\nexport default ModesRoute;","import { useState } from 'react'; \r\nimport Piano from '../components/Piano';\r\nimport StudyNotes from '../components/StudyNotes';\r\nimport { useSynth } from '../utils/synth';\r\nimport cx from 'classnames';\r\n\r\nconst cMajorChords = [\r\n  { name: 'Cmaj', notes: [ 'C4', 'E4', 'G4' ], className: 'is-major' },\r\n  { name: 'Dmin', notes: [ 'D4', 'F4', 'A4' ], className: 'is-minor' },\r\n  { name: 'Emin', notes: [ 'E4', 'G4', 'B4' ], className: 'is-minor' },\r\n  { name: 'Fmaj', notes: [ 'F4', 'A4', 'C5' ], className: 'is-major' },\r\n  { name: 'Gmaj', notes: [ 'G4', 'B4', 'D5' ], className: 'is-major' },\r\n  { name: 'Amin', notes: [ 'A4', 'C5', 'E5' ], className: 'is-minor' },\r\n  { name: 'Bdim', notes: [ 'B4', 'D5', 'F5' ], className: 'is-diminished' }\r\n];\r\n\r\nconst IntroChords = () => {\r\n  const [ highlightNotes, setHighlightNotes ] = useState([]);\r\n  const { playNote } = useSynth(); \r\n\r\n  const handleChord = (chord) => {\r\n    playNote(chord.notes);\r\n  }\r\n\r\n  const handleHover = (chord) => {\r\n    setHighlightNotes(chord ? chord.notes: []);\r\n  }\r\n\r\n  return (<div>\r\n    <div className=\"box controls\">\r\n      {cMajorChords.map(chord => (\r\n        <button \r\n          className={cx('button', chord.className)} \r\n          key={chord.name} \r\n          onMouseOver={() => handleHover(chord)}\r\n          onMouseOut={() => handleHover()}\r\n          onClick={() => handleChord(chord)}>{chord.name}</button>\r\n      ))}\r\n    </div>\r\n    <Piano startNote=\"C4\" endNote=\"F5\" highlightNotes={highlightNotes} />\r\n    <StudyNotes>{`\r\n- Triads are the simples types of chords\r\n- These are all the triads that can be derived from C-major scale\r\n- **Major triads** have a perfect fifth and a major third\r\n- **Minor triads** have a perfecct fifth and a minor third\r\n- **Diminished triads** have a diminished fifth and a minor third\r\n  `}</StudyNotes>\r\n  </div>);\r\n\r\n};\r\n\r\n\r\nexport default IntroChords;","import React from 'react';\r\nimport useState from 'react-usestateref'\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from './components/Header';\r\nimport { SynthContext } from './utils/synth';\r\nimport './App.scss';\r\n\r\nimport IntervalsRoute from './routes/Intervals';\r\nimport ModesRoute from './routes/Modes';\r\nimport IntroChordsRoute from './routes/IntroChords';\r\n\r\nfunction App() {\r\n  const [ notes, setNotes, ref ] = useState({});\r\n  return (\r\n    <SynthContext.Provider value={{ notes, setNotes, ref }}>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <p>Hello, doing some stuff to follow along with <a href=\"https://www.coursera.org/learn/edinburgh-music-theory\">Fundamentals of Music Theory</a>.</p>\r\n              <p>-Pawel</p>\r\n            </Route>\r\n            <Route path=\"/intervals\">\r\n              <IntervalsRoute />\r\n            </Route>\r\n            <Route path=\"/modes\">\r\n              <ModesRoute />\r\n            </Route>\r\n            <Route path=\"/introChords\">\r\n              <IntroChordsRoute />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n      <a href=\"https://github.com/makenai/music\" className=\"fork-me\">\r\n        <img loading=\"lazy\" width=\"149\" height=\"149\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_green_007200.png?resize=149%2C149\" alt=\"Fork me on GitHub\" data-recalc-dims=\"1\" />\r\n      </a>\r\n    </SynthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}